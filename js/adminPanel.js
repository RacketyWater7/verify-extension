/**
 * Validate the form fields
 */
function validateFields() {
  let fname = document.getElementById("fname").value;
  let lname = document.getElementById("lname").value;
  let mname = document.getElementById("mname").value;
  let ssn = document.getElementById("ssn").value;
  let last4ssn = document.getElementById("last4ssn").value;
  let street = document.getElementById("street").value;
  let city = document.getElementById("city").value;
  let city2 = document.getElementById("city2").value;
  let state = document.getElementById("state").value;
  let state2 = document.getElementById("state2").value;
  let country = document.getElementById("country").value;
  let zip = document.getElementById("zip").value;
  let keyword = document.getElementById("keyword").value;
  let bday = document.getElementById("bday").value;

  let fields = [
    fname,
    lname,
    mname,
    ssn,
    last4ssn,
    street,
    city,
    city2,
    state,
    state2,
    country,
    zip,
    keyword,
    bday,
  ];
  for (let i = 0; i < fields.length; i++) {
    if (fields[i] == "") {
      return "Please fill out all fields";
    }
  }
  let email = document.getElementById("email").value;
  if (email.length > 1 && email.includes("@") && email.includes(".")) {
  } else {
    return "Please enter a valid email";
  }
  if (!bday) {
    return "Please fill out all fields";
  }

  if (
    document.getElementById("male").checked === true ||
    document.getElementById("female").checked === true ||
    document.getElementById("other").checked === true
  ) {
  } else {
    return "Please fill out all fields";
  }
  if (zip.length === 5 && !isNaN(zip) && zip > 0) {
  } else {
    return "Please enter a valid zip code of 5 digits";
  }
  if (ssn <= 0 || last4ssn <= 0) {
    return "Please enter a valid ssn";
  }
  if (last4ssn.length === 4 && !isNaN(last4ssn)) {
  } else {
    return "Please enter valid last 4 digits of SSN";
  }
  if (ssn.length === 9 && !isNaN(ssn)) {
  } else {
    return "Please enter a valid SSN";
  }
  let today = new Date();
  let bdayDate = new Date(bday);
  if (bdayDate > today) {
    return "Birthday cannot be in the future";
  }
  return "";
}
/**
 * Submit the verification form from the react admin panel.
 */
function submitVerificationForm() {
  try {
    let btnContainer = document.getElementsByClassName("verify")[0];
    let fetchButton = document.getElementById("fetchbtn");
    let verifyButton = document.getElementById("verifybtn");
    if (fetchButton && verifyButton) {
    } else {
      let btn = document.createElement("button");
      let btnFetch = document.createElement("button");
      btn.innerText = "Verify";
      btnFetch.innerText = "Fetch AHS Status";
      btn.className = "btn-verify";
      btnFetch.className = "btn-verify";
      btn.id = "verifybtn";
      btnFetch.id = "fetchbtn";
      btn.style.width = "132px";
      btnContainer.appendChild(btn);
      btnContainer.appendChild(btnFetch);
    }

    document
      .getElementById("verifybtn")
      .addEventListener("click", function (e) {
        e.preventDefault();
        const validate = validateFields();
        if (validate !== "") {
          alert(validate);
        } else {
          let gender =
            document.getElementById("male").checked === true
              ? "male"
              : "female";
          let id = document.getElementById("user_id").value;
          if (id) {
            // => if id exists, then saving it for the pdf documents to be sent against this id
            // => if id doesn't exist, then it's a new user and we don't need to save it, because id will be generated by the server
            // => if the user loads an existing data, then changes the ssn and presses submit, then the previous id will be saved here, but we need new id for the pdf documents
            //       in this case, since the ssn is changed, it is considered as a new userData, and it will be overwritten by the id received from the server in postData()
            chrome.storage.sync.set(
              {
                id: document.getElementById("user_id").value,
              },
              function () {
                // console.log("id set");
              }
            );
          }
          chrome.storage.sync.set(
            {
              source: {
                fname: document.getElementById("fname").value,
                lname: document.getElementById("lname").value,
                gender: gender,
                mname: document.getElementById("mname").value,
                altfname1: document.getElementById("altfname1").value,
                altlname1: document.getElementById("altlname1").value,
                altfname2: document.getElementById("altfname2").value,
                altlname2: document.getElementById("altlname2").value,
                ssn: document.getElementById("ssn").value,
                last4ssn: document.getElementById("last4ssn").value,
                street: document.getElementById("street").value,
                city: document.getElementById("city").value,
                state: document.getElementById("state").value,
                zip: document.getElementById("zip").value,
                keyword: document.getElementById("keyword").value,
                birthplace: `${document.getElementById("city2").value}, ${
                  document.getElementById("state2").value
                }, ${document.getElementById("country").value}`,
                bday: document.getElementById("bday").value,
                email: document.getElementById("email").value,
              },
            },
            function () {
              chrome.storage.sync.get(["source"], function (result) {
                // console.log("saved data: ", result.source);
              });
              postData();
            }
          );
          chrome.storage.sync.remove("ahsData", function () {});

          window.open(
            `https://secure.vermont.gov/DPS/criminalrecords/subscriber?email=${email}&name=${
              document.getElementById("fname").value
            }`,
            "_blank"
          );
          chrome.runtime.sendMessage(
            { type: "keepValid" },
            function (response) {
              console.log(response);
            }
          );
        }
      });
    document.getElementById("fetchbtn").addEventListener("click", function (e) {
      e.preventDefault();
      let created_at = document.getElementById("created_at").value;
      let date = new Date(created_at);
      let yyyy = date.getFullYear();

      let mm = date.getMonth() + 1;
      if (mm < 10) {
        mm = "0" + mm;
      }
      let dd = date.getDate();
      let dateString = `${yyyy}-${mm}-${dd}`;
      if (created_at) {
        const validate = validateFields();
        if (validate !== "") {
          alert(validate);
        } else {
          chrome.storage.sync.set(
            {
              ahsData: {
                fname: document.getElementById("fname").value,
                lname: document.getElementById("lname").value,
                subFname: "Moe",
                subLname: "B",
                created_at: dateString,
              },
            },
            function () {}
          );
          chrome.storage.sync.set(
            {
              id: document.getElementById("user_id").value,
            },
            function () {
              // console.log("id set");
            }
          );
          // remove source from storage
          chrome.storage.sync.remove("source", function () {});
          window.open(
            `https://www.ahsnet.ahs.state.vt.us/ABC/sign_on.cfm`,
            "_blank"
          );
          // keeping the script alive
          chrome.runtime.sendMessage(
            { type: "keepValid" },
            function (response) {
              console.log(response);
            }
          );
        }
      } else {
        alert(
          "You need to perform the initial search first by pressing the Verify Button"
        );
      }
    });
  } catch (err) {
    let desc = `${err.toString()} in submitVerificationForm() in Content Script`;
    console.log(desc);
  }
}
